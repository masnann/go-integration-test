// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	model "go-integration-test/model"

	mock "github.com/stretchr/testify/mock"
)

// TodoRepository is an autogenerated mock type for the TodoRepository type
type TodoRepository struct {
	mock.Mock
}

// CreateTodo provides a mock function with given fields: todo
func (_m *TodoRepository) CreateTodo(todo *model.Todo) error {
	ret := _m.Called(todo)

	if len(ret) == 0 {
		panic("no return value specified for CreateTodo")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Todo) error); ok {
		r0 = rf(todo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTodoRepository creates a new instance of TodoRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTodoRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *TodoRepository {
	mock := &TodoRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
